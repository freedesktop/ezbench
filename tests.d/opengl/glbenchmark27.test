GLB27=$(realpath ${GLBENCHMARK27_PATH:-${GLBENCHMARK27_FOLDER}/build_x86_64/binaries/GLBenchmark} 2> /dev/null)
GLB27_DATA=$(realpath ${GLBENCHMARK27_DATA:-${GLBENCHMARK27_FOLDER}/data} 2> /dev/null)

test -e ${GLB27} || return 1
hash unbuffer 2>/dev/null || return 1

# Output:
#    GLBenchmark 2.5 Egypt HD ETC1 - C24Z16 Onscreen Fixed timestep: 9340 msec (121 fps)
#    GLBenchmark 2.7 T-Rex HD ETC1 - C24Z16 Onscreen: 4268 frames (76 fps)

# 4 arguments: $benchmark $width $height $bench_time
function __gl27__ {
    cmdline="unbuffer ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w $2 -h $3 -ow $2 -oh $3 -t $1"

    if [ $4 -eq 0 ]
    then
        ENV_DUMP_RESTRICT_TO_BINARY=${GLB27} \
        run_bench 130 $cmdline | sed '/fps/!d; s#.*: \(.*\) msec.*#1000000 / \1#' | bc -l
    else
        frames_count=$(ENV_DUMP_RESTRICT_TO_BINARY=${GLB27} \
                       run_bench 0 $cmdline | sed '/fps/!d; s#.*: \(.*\) frames.*#\1#')
        echo "$frames_count / $4" | bc -l
    fi
}

# 4 arguments: $benchmark $width $height $bench_time
function __gl27window__ {
    __gl27__ $1 $2 $3 $4
}

# Large versions, offscreen so no flip overhead?
# 4 arguments: $benchmark $width $height $bench_time
function __gl27offscreen__ {
    __gl27__ $1_Offscreen $2 $3 $4
}

while read bench_name benchmark_base fixed_postfix bench_time; do
    for i in window offscreen; do
        while read res_name width height; do
            name="${bench_name}:${res_name}:${i}"
            eval "${name}_run() { __gl27${i}__ ${benchmark_base} $width $height $bench_time; }"
            test_name="$test_name ${name}"

            name="${bench_name}_fixed:${res_name}:${i}"
            eval "${name}_run() { __gl27${i}__ ${benchmark_base}${fixed_postfix} $width $height 0; }"
            test_name="$test_name ${name}"
        done <<< "720p 1280 720
                768p  1366 768
                1080p 1920 1080"
    done

    name="${bench_name}:cpu"
    eval "${name}_run() { INTEL_NO_HW=1 __gl27offscreen__ ${benchmark_base} 16 16 $bench_time; }"
    test_name="$test_name ${name}"

    name="${bench_name}_fixed:cpu"
    eval "${name}_run() { INTEL_NO_HW=1 __gl27offscreen__ ${benchmark_base}${fixed_postfix} 16 16 0; }"
    test_name="$test_name ${name}"
done <<< "GLB27:Trex GLB27_TRex_C24Z16 _FixedTimeStep 56
        GLB27:Egypt GLB27_EgyptHD_inherited_C24Z16 _FixedTime 113"


# 4 arguments: $benchmark $width $height $bench_time
function __gl27_FillTest__ {
    cmdline="unbuffer ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w $2 -h $3 -ow $2 -oh $3 -t $1"

    ENV_DUMP_RESTRICT_TO_BINARY=${GLB27} \
    run_bench 0 $cmdline | sed '/FPS/!d; s#.*: .* \(.*\) FPS)#\1#'
}

# 3 arguments: $width $height $bench_time
function __gl27_FillTest_window__ {
    __gl27_FillTest__ GLB27_FillTestC24Z16 $1 $2 $3
}

# Large versions, offscreen so no flip overhead?
# 3 arguments: $width $height $bench_time
function __gl27_FillTest_offscreen__ {
    __gl27_FillTest__ GLB27_FillTestC24Z16_Offscreen $1 $2 $3
}

# Add the FillTest case
for i in window offscreen; do
    while read res_name width height; do
        name="GLB27:FillTest:${res_name}:${i}"
        eval "${name}_run() { __gl27_FillTest_${i}__ $width $height 10; }"
        test_name="$test_name ${name}"
    done <<< "720p 1280 720
            768p  1366 768
            1080p 1920 1080"
done

test_exec_time=48
