GLB27=${GLBENCHMARK27_PATH:-${GLBENCHMARK27_FOLDER}/build_x86_64/binaries/GLBenchmark}
GLB27_DATA=${GLBENCHMARK27_DATA:-${GLBENCHMARK27_FOLDER}/data}

test -e ${GLB27} || return 1
xdpyinfo >/dev/null 2>&1 || return 1

# Output:
#    GLBenchmark 2.5 Egypt HD ETC1 - C24Z16 Onscreen Fixed timestep: 9340 msec (121 fps)

# Large versions, fullscreen with flipping (seems to be variable size)
# 1 argument: $benchmark
function __gl27fullscreen__ {
    local W="${GLBENCHMARK27_WIDTH:-1920}"
    local H="${GLBENCHMARK27_HEIGHT:-1080}"

    read width height <<< $(xdpyinfo | sed '/dimensions/!d; s/.*dimensions:\(.*\)x\(.*\) pixels.*/\1 \2/')

    run_bench 0 ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w $width -h $height -ow $W -oh $H -t $1 | \
        sed '/fps/!d; s#.*: \(.*\) msec.*#1000000 / \1#' | bc -l
}

function __gl27window__ {
# 1 argument: $benchmark
    local W="${GLBENCHMARK27_WIDTH:-1920}"
    local H="${GLBENCHMARK27_HEIGHT:-1080}"

    read width height <<< $(xdpyinfo | sed '/dimensions/!d; s/.*dimensions:\(.*\)x\(.*\) pixels.*/\1 \2/')

    run_bench 0 ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w $(( $width / 2 )) -h $(( $height / 2 )) -ow $W -oh $H -t $1 | \
        sed '/fps/!d; s#.*: \(.*\) msec.*#1000000 / \1#' | bc -l
}

# Large versions, offscreen so no flip overhead?
# 1 argument: $benchmark
function __gl27offscreen__ {
    local W="${GLBENCHMARK27_WIDTH:-1920}"
    local H="${GLBENCHMARK27_HEIGHT:-1080}"

    run_bench 0 ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w $W -h $H -ow $W -oh $H -t $1 | \
        sed '/fps/!d; s#.*: \(.*\) msec.*#1000000 / \1#' | bc -l
}

# Small versions, to exercise CPU overheads
# 1 argument: $benchmark
function __gl27cpu__ {
    INTEL_NO_HW=1 run_bench 0 ${GLB27} -data ${GLB27_DATA} -skip_load_frames \
        -w 16 -h 16 -ow 16 -oh 16 -t $1 | \
        sed '/fps/!d; s#.*: \(.*\) msec.*#1000000 / \1#' | bc -l
}

while read name benchmark; do
   eval "${name}:fullscreen_run() { __gl27fullscreen__ \$1 $benchmark; }"
   test_name="$test_name $name:fullscreen"
   for i in window offscreen cpu; do
       eval "${name}:${i}_run() { __gl27${i}__ \$1 ${benchmark}_Offscreen; }"
       test_name="$test_name ${name}:${i}"
   done
done<<EOL
        GLB27:Trex GLB27_TRex_C24Z16_FixedTimeStep
        GLB27:Egypt GLB27_EgyptHD_inherited_C24Z16_FixedTime
EOL
test_exec_time=14
