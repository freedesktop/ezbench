source "$ezBenchDir/profiles.d/utils/common.sh"

# Accessible variables
# $ezBenchDir            [RO]: Directory of the ezbench
# ------------------
# $rounds                [WO]: Default number of rounds
# $makeAndDeployCmd      [WO]: Command to compile and deploy the current git HEAD
# $gitVersionDeployedCmd [WO]: Command to print out the sha1 of the version currently deployed
# $gitRepoDir            [WO]: Path to the git repo to use for this profile
# $reportName            [WO]: Name to give to your report
# $testsDir              [WO]: List of pathes to the directories containing the tests for this profile
# $testsList             [WO]: List of tests that should be ran in this profile
# $testExcludeList       [WO]: List of tests that should be excluded in this profile

function __deploy__archlinux__() {
    sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-linux-intel || return 72
    sudo -n mkinitcpio -k "$kernel_id" -g /boot/initramfs-linux-intel.img || return 72
    return 0
}

function __deploy__ubuntu__() {
    sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-linux-intel || return 72
    sudo update-initramfs -c -t -k "$kernel_id" || return 72
    sudo mv /boot/initrd.img-$kernel_id /boot/vmlinuz-linux-intel_initrd.img || return 72
    return 0
}

function __compile_and_deploy__() {
    # Return error codes:
    # 71: Compilation error
    # 72: Deployment error

    has_automatic_sudo_rights || return 72
    has_binary lsb_release || return 72

    # Compile the kernel. If any question arises, the default choice will be taken
    # This part assumes that you have a working .config already set up. You can generate it using make localmodconfig.
    make olddefconfig || return 71
    make -j8 || return 71
    capture=$(sudo make modules_install || return 71)
    [ $? -ne 0 ] && { echo "$capture"; return 71; }
    echo "$capture"
    kernel_id=$(echo "$capture" | grep DEPMOD | grep -o '[^ ]*$')

    # Check what is the current distro
    distro=$(lsb_release -is)
    case "$distro" in
    "Arch")
        kernel_id="$kernel_id" __deploy__archlinux__
        [ $? -ne 0 ] && return 72
        ;;
    "Ubuntu")
        kernel_id="$kernel_id" __deploy__ubuntu__
        [ $? -ne 0 ] && return 72
        ;;
    *)
        echo "WARNING: Unknown distribution '$distro'. Please add contact the authors of EzBench."
        return 70
        ;;
    esac

    # Force grub to boot on the non-distro kernel that we just compiled
    #
    # WARNING: Make sure that grub reverts to the distro's kernel if the
    # computer crashes!
    sudo -n grub-reboot ezbench_kernel || return 72

    return 0
}

function __default_make_and_deploy__() {
    # Return error codes:
    # 71: Compilation error
    # 72: Deployment error

    x_show_debug_info_start

    __compile_and_deploy__
    compile_error=$?

    x_show_debug_info_stop

    [ "$compile_error" -ne 0 ] && return $compile_error

    # Return that a reboot is necessary
    return 74
}

function __git_version_deployed__() {
    # Transforms 4.3.0-rc2-10901-gbcb183d into bcb183d
    # This requires CONFIG_LOCALVERSION_AUTO=y
    uname -r | cut -d 'g' -f 2
}

rounds=3
makeAndDeployCmd="__default_make_and_deploy__"
gitRepoDir="$REPO_LINUX"
gitVersionDeployedCmd="__git_version_deployed__"
