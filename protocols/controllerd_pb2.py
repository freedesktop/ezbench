# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: controllerd.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='controllerd.proto',
  package='ezbench_controllerd',
  syntax='proto3',
  serialized_pb=_b('\n\x11\x63ontrollerd.proto\x12\x13\x65zbench_controllerd\"4\n\x0b\x43lientHello\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x14\n\x0cmachine_name\x18\x02 \x01(\t\"7\n\x0bServerHello\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x17\n\x0f\x63ontroller_name\x18\x02 \x01(\t\"\x1c\n\x07\x43mdPing\x12\x11\n\trequested\x18\x01 \x01(\x08\"\xfb\x02\n\x0fReportAttribute\x12\x1e\n\x14\x65vent_min_confidence\x18\x01 \x01(\x02H\x00\x12\x1e\n\x14schedule_max_commits\x18\x64 \x01(\rH\x00\x12 \n\x16schedule_deadline_soft\x18\x65 \x01(\x04H\x00\x12 \n\x16schedule_deadline_hard\x18\x66 \x01(\x04H\x00\x12\x1a\n\x0fperf_min_change\x18\xc8\x01 \x01(\x02H\x00\x12\x17\n\x0cvariance_max\x18\xac\x02 \x01(\x02H\x00\x12!\n\x16variance_max_run_count\x18\xad\x02 \x01(\rH\x00\x12!\n\x16variance_min_run_count\x18\xae\x02 \x01(\rH\x00\x12\x1a\n\x0freport_priority\x18\x90\x03 \x01(\x05H\x00\x12\x1f\n\x14report_deadline_soft\x18\x91\x03 \x01(\x04H\x00\x12\x1f\n\x14report_deadline_hard\x18\x92\x03 \x01(\x04H\x00\x42\x0b\n\tattribute\"\x8a\x01\n\x06Report\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x12\n\nupload_url\x18\x03 \x01(\t\x12\x0f\n\x07profile\x18\x04 \x01(\t\x12\x38\n\nattributes\x18\x05 \x03(\x0b\x32$.ezbench_controllerd.ReportAttribute\"\x1f\n\x0f\x43mdDeleteReport\x12\x0c\n\x04name\x18\x01 \x01(\t\"-\n\rTestExecution\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06rounds\x18\x02 \x01(\r\"0\n\x10TestsetExecution\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06rounds\x18\x02 \x01(\r\"\x87\x01\n\rCmdWorkCommit\x12\n\n\x02id\x18\x01 \x01(\t\x12\x31\n\x05tests\x18\x02 \x03(\x0b\x32\".ezbench_controllerd.TestExecution\x12\x37\n\x08testsets\x18\x03 \x03(\x0b\x32%.ezbench_controllerd.TestsetExecution\"k\n\x07\x43mdWork\x12+\n\x06report\x18\x01 \x01(\x0b\x32\x1b.ezbench_controllerd.Report\x12\x33\n\x07\x63ommits\x18\x02 \x03(\x0b\x32\".ezbench_controllerd.CmdWorkCommit\"\xba\x01\n\x03\x43md\x12\n\n\x02id\x18\x01 \x01(\x04\x12,\n\x04ping\x18\x02 \x01(\x0b\x32\x1c.ezbench_controllerd.CmdPingH\x00\x12\x30\n\x08set_work\x18\x03 \x01(\x0b\x32\x1c.ezbench_controllerd.CmdWorkH\x00\x12=\n\rdelete_report\x18\x04 \x01(\x0b\x32$.ezbench_controllerd.CmdDeleteReportH\x00\x42\x08\n\x06submsg\"x\n\x0bReportState\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07profile\x18\x02 \x01(\t\x12\r\n\x05state\x18\n \x01(\t\x12\x12\n\nstate_disk\x18\x0b \x01(\t\x12\x12\n\nbuild_time\x18\x14 \x01(\x02\x12\x13\n\x0b\x64\x65ploy_time\x18\x15 \x01(\x02\")\n\nSigMoreLog\x12\x0e\n\x06report\x18\x01 \x01(\t\x12\x0b\n\x03msg\x18\x02 \x01(\t\"[\n\x10\x41vailableReports\x12\x14\n\x0creport_count\x18\x01 \x01(\r\x12\x31\n\x07reports\x18\x02 \x03(\x0b\x32 .ezbench_controllerd.ReportState\"\xa5\x01\n\x0e\x41vailableTests\x12\x13\n\x0btests_count\x18\x01 \x01(\r\x12\x37\n\x05tests\x18\x02 \x03(\x0b\x32(.ezbench_controllerd.AvailableTests.Test\x1a\x45\n\x04Test\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x15\n\rexec_time_max\x18\x02 \x01(\x02\x12\x18\n\x10\x65xec_time_median\x18\x03 \x01(\x02\"\xce\x01\n\x11\x41vailableTestsets\x12\x16\n\x0etestsets_count\x18\x01 \x01(\r\x12@\n\x08testsets\x18\x02 \x03(\x0b\x32..ezbench_controllerd.AvailableTestsets.Testset\x1a_\n\x07Testset\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x31\n\x05tests\x18\x03 \x03(\x0b\x32\".ezbench_controllerd.TestExecution\"\xa4\x01\n\tCmdStatus\x12\n\n\x02id\x18\x01 \x01(\x04\x12=\n\x08\x65rr_code\x18\x02 \x01(\x0e\x32+.ezbench_controllerd.CmdStatus.CmdErrorCode\x12\x0f\n\x07\x65rr_msg\x18\x03 \x01(\t\";\n\x0c\x43mdErrorCode\x12\x0b\n\x07NON_ACK\x10\x00\x12\x06\n\x02OK\x10\x01\x12\t\n\x05\x45RROR\x10\x02\x12\x0b\n\x07WARNING\x10\x03\"!\n\x0fSigReportPushed\x12\x0e\n\x06report\x18\x01 \x01(\t\"\x1e\n\tSigReboot\x12\x11\n\ttimestamp\x18\x01 \x01(\x01\"\x95\x03\n\x06Signal\x12\x34\n\ncmd_status\x18\x01 \x01(\x0b\x32\x1e.ezbench_controllerd.CmdStatusH\x00\x12\x38\n\x07reports\x18\x02 \x01(\x0b\x32%.ezbench_controllerd.AvailableReportsH\x00\x12\x34\n\x05tests\x18\x03 \x01(\x0b\x32#.ezbench_controllerd.AvailableTestsH\x00\x12:\n\x08testsets\x18\x04 \x01(\x0b\x32&.ezbench_controllerd.AvailableTestsetsH\x00\x12.\n\x03log\x18\x05 \x01(\x0b\x32\x1f.ezbench_controllerd.SigMoreLogH\x00\x12=\n\rreport_pushed\x18\x06 \x01(\x0b\x32$.ezbench_controllerd.SigReportPushedH\x00\x12\x30\n\x06reboot\x18\x07 \x01(\x0b\x32\x1e.ezbench_controllerd.SigRebootH\x00\x42\x08\n\x06submsg\"\x8b\x01\n\tQueuedCmd\x12%\n\x03\x63md\x18\x01 \x01(\x0b\x32\x18.ezbench_controllerd.Cmd\x12.\n\x06status\x18\x02 \x01(\x0b\x32\x1e.ezbench_controllerd.CmdStatus\x12\x11\n\tlast_sent\x18\x03 \x01(\x01\x12\x14\n\x0c\x61\x63knowledged\x18\x04 \x01(\x01\"\xc5\x02\n\x0cMachineState\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tlast_seen\x18\x02 \x01(\x04\x12\x0c\n\x04ping\x18\x03 \x01(\x02\x12\x13\n\x0bnext_cmd_id\x18( \x01(\x04\x12\x33\n\x0bqueued_cmds\x18) \x03(\x0b\x32\x1e.ezbench_controllerd.QueuedCmd\x12\x16\n\x0erecv_sig_count\x18* \x01(\x04\x12\x36\n\x07reports\x18\x32 \x01(\x0b\x32%.ezbench_controllerd.AvailableReports\x12\x32\n\x05tests\x18\x33 \x01(\x0b\x32#.ezbench_controllerd.AvailableTests\x12\x38\n\x08testsets\x18\x34 \x01(\x0b\x32&.ezbench_controllerd.AvailableTestsets\"\x85\x01\n\x03Job\x12\n\n\x02id\x18\x01 \x01(\t\x12+\n\x06report\x18\x02 \x01(\x0b\x32\x1b.ezbench_controllerd.Report\x12\x10\n\x08machines\x18\x03 \x03(\t\x12\x33\n\x07\x63ommits\x18\x04 \x03(\x0b\x32\".ezbench_controllerd.CmdWorkCommit\"h\n\tFullState\x12\x33\n\x08machines\x18\x01 \x03(\x0b\x32!.ezbench_controllerd.MachineState\x12&\n\x04jobs\x18\x02 \x03(\x0b\x32\x18.ezbench_controllerd.Jobb\x06proto3')
)



_CMDSTATUS_CMDERRORCODE = _descriptor.EnumDescriptor(
  name='CmdErrorCode',
  full_name='ezbench_controllerd.CmdStatus.CmdErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NON_ACK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WARNING', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2013,
  serialized_end=2072,
)
_sym_db.RegisterEnumDescriptor(_CMDSTATUS_CMDERRORCODE)


_CLIENTHELLO = _descriptor.Descriptor(
  name='ClientHello',
  full_name='ezbench_controllerd.ClientHello',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='ezbench_controllerd.ClientHello.version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='machine_name', full_name='ezbench_controllerd.ClientHello.machine_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=94,
)


_SERVERHELLO = _descriptor.Descriptor(
  name='ServerHello',
  full_name='ezbench_controllerd.ServerHello',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='ezbench_controllerd.ServerHello.version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='controller_name', full_name='ezbench_controllerd.ServerHello.controller_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=151,
)


_CMDPING = _descriptor.Descriptor(
  name='CmdPing',
  full_name='ezbench_controllerd.CmdPing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requested', full_name='ezbench_controllerd.CmdPing.requested', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=181,
)


_REPORTATTRIBUTE = _descriptor.Descriptor(
  name='ReportAttribute',
  full_name='ezbench_controllerd.ReportAttribute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='event_min_confidence', full_name='ezbench_controllerd.ReportAttribute.event_min_confidence', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedule_max_commits', full_name='ezbench_controllerd.ReportAttribute.schedule_max_commits', index=1,
      number=100, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedule_deadline_soft', full_name='ezbench_controllerd.ReportAttribute.schedule_deadline_soft', index=2,
      number=101, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedule_deadline_hard', full_name='ezbench_controllerd.ReportAttribute.schedule_deadline_hard', index=3,
      number=102, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='perf_min_change', full_name='ezbench_controllerd.ReportAttribute.perf_min_change', index=4,
      number=200, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variance_max', full_name='ezbench_controllerd.ReportAttribute.variance_max', index=5,
      number=300, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variance_max_run_count', full_name='ezbench_controllerd.ReportAttribute.variance_max_run_count', index=6,
      number=301, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variance_min_run_count', full_name='ezbench_controllerd.ReportAttribute.variance_min_run_count', index=7,
      number=302, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='report_priority', full_name='ezbench_controllerd.ReportAttribute.report_priority', index=8,
      number=400, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='report_deadline_soft', full_name='ezbench_controllerd.ReportAttribute.report_deadline_soft', index=9,
      number=401, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='report_deadline_hard', full_name='ezbench_controllerd.ReportAttribute.report_deadline_hard', index=10,
      number=402, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='attribute', full_name='ezbench_controllerd.ReportAttribute.attribute',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=184,
  serialized_end=563,
)


_REPORT = _descriptor.Descriptor(
  name='Report',
  full_name='ezbench_controllerd.Report',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.Report.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='ezbench_controllerd.Report.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upload_url', full_name='ezbench_controllerd.Report.upload_url', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='profile', full_name='ezbench_controllerd.Report.profile', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='ezbench_controllerd.Report.attributes', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=566,
  serialized_end=704,
)


_CMDDELETEREPORT = _descriptor.Descriptor(
  name='CmdDeleteReport',
  full_name='ezbench_controllerd.CmdDeleteReport',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.CmdDeleteReport.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=706,
  serialized_end=737,
)


_TESTEXECUTION = _descriptor.Descriptor(
  name='TestExecution',
  full_name='ezbench_controllerd.TestExecution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.TestExecution.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rounds', full_name='ezbench_controllerd.TestExecution.rounds', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=739,
  serialized_end=784,
)


_TESTSETEXECUTION = _descriptor.Descriptor(
  name='TestsetExecution',
  full_name='ezbench_controllerd.TestsetExecution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.TestsetExecution.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rounds', full_name='ezbench_controllerd.TestsetExecution.rounds', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=786,
  serialized_end=834,
)


_CMDWORKCOMMIT = _descriptor.Descriptor(
  name='CmdWorkCommit',
  full_name='ezbench_controllerd.CmdWorkCommit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ezbench_controllerd.CmdWorkCommit.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tests', full_name='ezbench_controllerd.CmdWorkCommit.tests', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='testsets', full_name='ezbench_controllerd.CmdWorkCommit.testsets', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=837,
  serialized_end=972,
)


_CMDWORK = _descriptor.Descriptor(
  name='CmdWork',
  full_name='ezbench_controllerd.CmdWork',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report', full_name='ezbench_controllerd.CmdWork.report', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commits', full_name='ezbench_controllerd.CmdWork.commits', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=974,
  serialized_end=1081,
)


_CMD = _descriptor.Descriptor(
  name='Cmd',
  full_name='ezbench_controllerd.Cmd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ezbench_controllerd.Cmd.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ping', full_name='ezbench_controllerd.Cmd.ping', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='set_work', full_name='ezbench_controllerd.Cmd.set_work', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delete_report', full_name='ezbench_controllerd.Cmd.delete_report', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='submsg', full_name='ezbench_controllerd.Cmd.submsg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1084,
  serialized_end=1270,
)


_REPORTSTATE = _descriptor.Descriptor(
  name='ReportState',
  full_name='ezbench_controllerd.ReportState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.ReportState.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='profile', full_name='ezbench_controllerd.ReportState.profile', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='ezbench_controllerd.ReportState.state', index=2,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state_disk', full_name='ezbench_controllerd.ReportState.state_disk', index=3,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='build_time', full_name='ezbench_controllerd.ReportState.build_time', index=4,
      number=20, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deploy_time', full_name='ezbench_controllerd.ReportState.deploy_time', index=5,
      number=21, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1272,
  serialized_end=1392,
)


_SIGMORELOG = _descriptor.Descriptor(
  name='SigMoreLog',
  full_name='ezbench_controllerd.SigMoreLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report', full_name='ezbench_controllerd.SigMoreLog.report', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='ezbench_controllerd.SigMoreLog.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1394,
  serialized_end=1435,
)


_AVAILABLEREPORTS = _descriptor.Descriptor(
  name='AvailableReports',
  full_name='ezbench_controllerd.AvailableReports',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report_count', full_name='ezbench_controllerd.AvailableReports.report_count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reports', full_name='ezbench_controllerd.AvailableReports.reports', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1437,
  serialized_end=1528,
)


_AVAILABLETESTS_TEST = _descriptor.Descriptor(
  name='Test',
  full_name='ezbench_controllerd.AvailableTests.Test',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.AvailableTests.Test.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exec_time_max', full_name='ezbench_controllerd.AvailableTests.Test.exec_time_max', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exec_time_median', full_name='ezbench_controllerd.AvailableTests.Test.exec_time_median', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1627,
  serialized_end=1696,
)

_AVAILABLETESTS = _descriptor.Descriptor(
  name='AvailableTests',
  full_name='ezbench_controllerd.AvailableTests',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tests_count', full_name='ezbench_controllerd.AvailableTests.tests_count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tests', full_name='ezbench_controllerd.AvailableTests.tests', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_AVAILABLETESTS_TEST, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1531,
  serialized_end=1696,
)


_AVAILABLETESTSETS_TESTSET = _descriptor.Descriptor(
  name='Testset',
  full_name='ezbench_controllerd.AvailableTestsets.Testset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.AvailableTestsets.Testset.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='ezbench_controllerd.AvailableTestsets.Testset.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tests', full_name='ezbench_controllerd.AvailableTestsets.Testset.tests', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1810,
  serialized_end=1905,
)

_AVAILABLETESTSETS = _descriptor.Descriptor(
  name='AvailableTestsets',
  full_name='ezbench_controllerd.AvailableTestsets',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='testsets_count', full_name='ezbench_controllerd.AvailableTestsets.testsets_count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='testsets', full_name='ezbench_controllerd.AvailableTestsets.testsets', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_AVAILABLETESTSETS_TESTSET, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1699,
  serialized_end=1905,
)


_CMDSTATUS = _descriptor.Descriptor(
  name='CmdStatus',
  full_name='ezbench_controllerd.CmdStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ezbench_controllerd.CmdStatus.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err_code', full_name='ezbench_controllerd.CmdStatus.err_code', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err_msg', full_name='ezbench_controllerd.CmdStatus.err_msg', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CMDSTATUS_CMDERRORCODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1908,
  serialized_end=2072,
)


_SIGREPORTPUSHED = _descriptor.Descriptor(
  name='SigReportPushed',
  full_name='ezbench_controllerd.SigReportPushed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report', full_name='ezbench_controllerd.SigReportPushed.report', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2074,
  serialized_end=2107,
)


_SIGREBOOT = _descriptor.Descriptor(
  name='SigReboot',
  full_name='ezbench_controllerd.SigReboot',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='ezbench_controllerd.SigReboot.timestamp', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2109,
  serialized_end=2139,
)


_SIGNAL = _descriptor.Descriptor(
  name='Signal',
  full_name='ezbench_controllerd.Signal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cmd_status', full_name='ezbench_controllerd.Signal.cmd_status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reports', full_name='ezbench_controllerd.Signal.reports', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tests', full_name='ezbench_controllerd.Signal.tests', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='testsets', full_name='ezbench_controllerd.Signal.testsets', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='ezbench_controllerd.Signal.log', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='report_pushed', full_name='ezbench_controllerd.Signal.report_pushed', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reboot', full_name='ezbench_controllerd.Signal.reboot', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='submsg', full_name='ezbench_controllerd.Signal.submsg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2142,
  serialized_end=2547,
)


_QUEUEDCMD = _descriptor.Descriptor(
  name='QueuedCmd',
  full_name='ezbench_controllerd.QueuedCmd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cmd', full_name='ezbench_controllerd.QueuedCmd.cmd', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='ezbench_controllerd.QueuedCmd.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_sent', full_name='ezbench_controllerd.QueuedCmd.last_sent', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='acknowledged', full_name='ezbench_controllerd.QueuedCmd.acknowledged', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2550,
  serialized_end=2689,
)


_MACHINESTATE = _descriptor.Descriptor(
  name='MachineState',
  full_name='ezbench_controllerd.MachineState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ezbench_controllerd.MachineState.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_seen', full_name='ezbench_controllerd.MachineState.last_seen', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ping', full_name='ezbench_controllerd.MachineState.ping', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_cmd_id', full_name='ezbench_controllerd.MachineState.next_cmd_id', index=3,
      number=40, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queued_cmds', full_name='ezbench_controllerd.MachineState.queued_cmds', index=4,
      number=41, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recv_sig_count', full_name='ezbench_controllerd.MachineState.recv_sig_count', index=5,
      number=42, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reports', full_name='ezbench_controllerd.MachineState.reports', index=6,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tests', full_name='ezbench_controllerd.MachineState.tests', index=7,
      number=51, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='testsets', full_name='ezbench_controllerd.MachineState.testsets', index=8,
      number=52, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2692,
  serialized_end=3017,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='ezbench_controllerd.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ezbench_controllerd.Job.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='report', full_name='ezbench_controllerd.Job.report', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='machines', full_name='ezbench_controllerd.Job.machines', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commits', full_name='ezbench_controllerd.Job.commits', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3020,
  serialized_end=3153,
)


_FULLSTATE = _descriptor.Descriptor(
  name='FullState',
  full_name='ezbench_controllerd.FullState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='machines', full_name='ezbench_controllerd.FullState.machines', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='jobs', full_name='ezbench_controllerd.FullState.jobs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3155,
  serialized_end=3259,
)

_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['event_min_confidence'])
_REPORTATTRIBUTE.fields_by_name['event_min_confidence'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['schedule_max_commits'])
_REPORTATTRIBUTE.fields_by_name['schedule_max_commits'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['schedule_deadline_soft'])
_REPORTATTRIBUTE.fields_by_name['schedule_deadline_soft'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['schedule_deadline_hard'])
_REPORTATTRIBUTE.fields_by_name['schedule_deadline_hard'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['perf_min_change'])
_REPORTATTRIBUTE.fields_by_name['perf_min_change'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['variance_max'])
_REPORTATTRIBUTE.fields_by_name['variance_max'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['variance_max_run_count'])
_REPORTATTRIBUTE.fields_by_name['variance_max_run_count'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['variance_min_run_count'])
_REPORTATTRIBUTE.fields_by_name['variance_min_run_count'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['report_priority'])
_REPORTATTRIBUTE.fields_by_name['report_priority'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['report_deadline_soft'])
_REPORTATTRIBUTE.fields_by_name['report_deadline_soft'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORTATTRIBUTE.oneofs_by_name['attribute'].fields.append(
  _REPORTATTRIBUTE.fields_by_name['report_deadline_hard'])
_REPORTATTRIBUTE.fields_by_name['report_deadline_hard'].containing_oneof = _REPORTATTRIBUTE.oneofs_by_name['attribute']
_REPORT.fields_by_name['attributes'].message_type = _REPORTATTRIBUTE
_CMDWORKCOMMIT.fields_by_name['tests'].message_type = _TESTEXECUTION
_CMDWORKCOMMIT.fields_by_name['testsets'].message_type = _TESTSETEXECUTION
_CMDWORK.fields_by_name['report'].message_type = _REPORT
_CMDWORK.fields_by_name['commits'].message_type = _CMDWORKCOMMIT
_CMD.fields_by_name['ping'].message_type = _CMDPING
_CMD.fields_by_name['set_work'].message_type = _CMDWORK
_CMD.fields_by_name['delete_report'].message_type = _CMDDELETEREPORT
_CMD.oneofs_by_name['submsg'].fields.append(
  _CMD.fields_by_name['ping'])
_CMD.fields_by_name['ping'].containing_oneof = _CMD.oneofs_by_name['submsg']
_CMD.oneofs_by_name['submsg'].fields.append(
  _CMD.fields_by_name['set_work'])
_CMD.fields_by_name['set_work'].containing_oneof = _CMD.oneofs_by_name['submsg']
_CMD.oneofs_by_name['submsg'].fields.append(
  _CMD.fields_by_name['delete_report'])
_CMD.fields_by_name['delete_report'].containing_oneof = _CMD.oneofs_by_name['submsg']
_AVAILABLEREPORTS.fields_by_name['reports'].message_type = _REPORTSTATE
_AVAILABLETESTS_TEST.containing_type = _AVAILABLETESTS
_AVAILABLETESTS.fields_by_name['tests'].message_type = _AVAILABLETESTS_TEST
_AVAILABLETESTSETS_TESTSET.fields_by_name['tests'].message_type = _TESTEXECUTION
_AVAILABLETESTSETS_TESTSET.containing_type = _AVAILABLETESTSETS
_AVAILABLETESTSETS.fields_by_name['testsets'].message_type = _AVAILABLETESTSETS_TESTSET
_CMDSTATUS.fields_by_name['err_code'].enum_type = _CMDSTATUS_CMDERRORCODE
_CMDSTATUS_CMDERRORCODE.containing_type = _CMDSTATUS
_SIGNAL.fields_by_name['cmd_status'].message_type = _CMDSTATUS
_SIGNAL.fields_by_name['reports'].message_type = _AVAILABLEREPORTS
_SIGNAL.fields_by_name['tests'].message_type = _AVAILABLETESTS
_SIGNAL.fields_by_name['testsets'].message_type = _AVAILABLETESTSETS
_SIGNAL.fields_by_name['log'].message_type = _SIGMORELOG
_SIGNAL.fields_by_name['report_pushed'].message_type = _SIGREPORTPUSHED
_SIGNAL.fields_by_name['reboot'].message_type = _SIGREBOOT
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['cmd_status'])
_SIGNAL.fields_by_name['cmd_status'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['reports'])
_SIGNAL.fields_by_name['reports'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['tests'])
_SIGNAL.fields_by_name['tests'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['testsets'])
_SIGNAL.fields_by_name['testsets'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['log'])
_SIGNAL.fields_by_name['log'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['report_pushed'])
_SIGNAL.fields_by_name['report_pushed'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_SIGNAL.oneofs_by_name['submsg'].fields.append(
  _SIGNAL.fields_by_name['reboot'])
_SIGNAL.fields_by_name['reboot'].containing_oneof = _SIGNAL.oneofs_by_name['submsg']
_QUEUEDCMD.fields_by_name['cmd'].message_type = _CMD
_QUEUEDCMD.fields_by_name['status'].message_type = _CMDSTATUS
_MACHINESTATE.fields_by_name['queued_cmds'].message_type = _QUEUEDCMD
_MACHINESTATE.fields_by_name['reports'].message_type = _AVAILABLEREPORTS
_MACHINESTATE.fields_by_name['tests'].message_type = _AVAILABLETESTS
_MACHINESTATE.fields_by_name['testsets'].message_type = _AVAILABLETESTSETS
_JOB.fields_by_name['report'].message_type = _REPORT
_JOB.fields_by_name['commits'].message_type = _CMDWORKCOMMIT
_FULLSTATE.fields_by_name['machines'].message_type = _MACHINESTATE
_FULLSTATE.fields_by_name['jobs'].message_type = _JOB
DESCRIPTOR.message_types_by_name['ClientHello'] = _CLIENTHELLO
DESCRIPTOR.message_types_by_name['ServerHello'] = _SERVERHELLO
DESCRIPTOR.message_types_by_name['CmdPing'] = _CMDPING
DESCRIPTOR.message_types_by_name['ReportAttribute'] = _REPORTATTRIBUTE
DESCRIPTOR.message_types_by_name['Report'] = _REPORT
DESCRIPTOR.message_types_by_name['CmdDeleteReport'] = _CMDDELETEREPORT
DESCRIPTOR.message_types_by_name['TestExecution'] = _TESTEXECUTION
DESCRIPTOR.message_types_by_name['TestsetExecution'] = _TESTSETEXECUTION
DESCRIPTOR.message_types_by_name['CmdWorkCommit'] = _CMDWORKCOMMIT
DESCRIPTOR.message_types_by_name['CmdWork'] = _CMDWORK
DESCRIPTOR.message_types_by_name['Cmd'] = _CMD
DESCRIPTOR.message_types_by_name['ReportState'] = _REPORTSTATE
DESCRIPTOR.message_types_by_name['SigMoreLog'] = _SIGMORELOG
DESCRIPTOR.message_types_by_name['AvailableReports'] = _AVAILABLEREPORTS
DESCRIPTOR.message_types_by_name['AvailableTests'] = _AVAILABLETESTS
DESCRIPTOR.message_types_by_name['AvailableTestsets'] = _AVAILABLETESTSETS
DESCRIPTOR.message_types_by_name['CmdStatus'] = _CMDSTATUS
DESCRIPTOR.message_types_by_name['SigReportPushed'] = _SIGREPORTPUSHED
DESCRIPTOR.message_types_by_name['SigReboot'] = _SIGREBOOT
DESCRIPTOR.message_types_by_name['Signal'] = _SIGNAL
DESCRIPTOR.message_types_by_name['QueuedCmd'] = _QUEUEDCMD
DESCRIPTOR.message_types_by_name['MachineState'] = _MACHINESTATE
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['FullState'] = _FULLSTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ClientHello = _reflection.GeneratedProtocolMessageType('ClientHello', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTHELLO,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.ClientHello)
  ))
_sym_db.RegisterMessage(ClientHello)

ServerHello = _reflection.GeneratedProtocolMessageType('ServerHello', (_message.Message,), dict(
  DESCRIPTOR = _SERVERHELLO,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.ServerHello)
  ))
_sym_db.RegisterMessage(ServerHello)

CmdPing = _reflection.GeneratedProtocolMessageType('CmdPing', (_message.Message,), dict(
  DESCRIPTOR = _CMDPING,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.CmdPing)
  ))
_sym_db.RegisterMessage(CmdPing)

ReportAttribute = _reflection.GeneratedProtocolMessageType('ReportAttribute', (_message.Message,), dict(
  DESCRIPTOR = _REPORTATTRIBUTE,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.ReportAttribute)
  ))
_sym_db.RegisterMessage(ReportAttribute)

Report = _reflection.GeneratedProtocolMessageType('Report', (_message.Message,), dict(
  DESCRIPTOR = _REPORT,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.Report)
  ))
_sym_db.RegisterMessage(Report)

CmdDeleteReport = _reflection.GeneratedProtocolMessageType('CmdDeleteReport', (_message.Message,), dict(
  DESCRIPTOR = _CMDDELETEREPORT,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.CmdDeleteReport)
  ))
_sym_db.RegisterMessage(CmdDeleteReport)

TestExecution = _reflection.GeneratedProtocolMessageType('TestExecution', (_message.Message,), dict(
  DESCRIPTOR = _TESTEXECUTION,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.TestExecution)
  ))
_sym_db.RegisterMessage(TestExecution)

TestsetExecution = _reflection.GeneratedProtocolMessageType('TestsetExecution', (_message.Message,), dict(
  DESCRIPTOR = _TESTSETEXECUTION,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.TestsetExecution)
  ))
_sym_db.RegisterMessage(TestsetExecution)

CmdWorkCommit = _reflection.GeneratedProtocolMessageType('CmdWorkCommit', (_message.Message,), dict(
  DESCRIPTOR = _CMDWORKCOMMIT,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.CmdWorkCommit)
  ))
_sym_db.RegisterMessage(CmdWorkCommit)

CmdWork = _reflection.GeneratedProtocolMessageType('CmdWork', (_message.Message,), dict(
  DESCRIPTOR = _CMDWORK,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.CmdWork)
  ))
_sym_db.RegisterMessage(CmdWork)

Cmd = _reflection.GeneratedProtocolMessageType('Cmd', (_message.Message,), dict(
  DESCRIPTOR = _CMD,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.Cmd)
  ))
_sym_db.RegisterMessage(Cmd)

ReportState = _reflection.GeneratedProtocolMessageType('ReportState', (_message.Message,), dict(
  DESCRIPTOR = _REPORTSTATE,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.ReportState)
  ))
_sym_db.RegisterMessage(ReportState)

SigMoreLog = _reflection.GeneratedProtocolMessageType('SigMoreLog', (_message.Message,), dict(
  DESCRIPTOR = _SIGMORELOG,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.SigMoreLog)
  ))
_sym_db.RegisterMessage(SigMoreLog)

AvailableReports = _reflection.GeneratedProtocolMessageType('AvailableReports', (_message.Message,), dict(
  DESCRIPTOR = _AVAILABLEREPORTS,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.AvailableReports)
  ))
_sym_db.RegisterMessage(AvailableReports)

AvailableTests = _reflection.GeneratedProtocolMessageType('AvailableTests', (_message.Message,), dict(

  Test = _reflection.GeneratedProtocolMessageType('Test', (_message.Message,), dict(
    DESCRIPTOR = _AVAILABLETESTS_TEST,
    __module__ = 'controllerd_pb2'
    # @@protoc_insertion_point(class_scope:ezbench_controllerd.AvailableTests.Test)
    ))
  ,
  DESCRIPTOR = _AVAILABLETESTS,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.AvailableTests)
  ))
_sym_db.RegisterMessage(AvailableTests)
_sym_db.RegisterMessage(AvailableTests.Test)

AvailableTestsets = _reflection.GeneratedProtocolMessageType('AvailableTestsets', (_message.Message,), dict(

  Testset = _reflection.GeneratedProtocolMessageType('Testset', (_message.Message,), dict(
    DESCRIPTOR = _AVAILABLETESTSETS_TESTSET,
    __module__ = 'controllerd_pb2'
    # @@protoc_insertion_point(class_scope:ezbench_controllerd.AvailableTestsets.Testset)
    ))
  ,
  DESCRIPTOR = _AVAILABLETESTSETS,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.AvailableTestsets)
  ))
_sym_db.RegisterMessage(AvailableTestsets)
_sym_db.RegisterMessage(AvailableTestsets.Testset)

CmdStatus = _reflection.GeneratedProtocolMessageType('CmdStatus', (_message.Message,), dict(
  DESCRIPTOR = _CMDSTATUS,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.CmdStatus)
  ))
_sym_db.RegisterMessage(CmdStatus)

SigReportPushed = _reflection.GeneratedProtocolMessageType('SigReportPushed', (_message.Message,), dict(
  DESCRIPTOR = _SIGREPORTPUSHED,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.SigReportPushed)
  ))
_sym_db.RegisterMessage(SigReportPushed)

SigReboot = _reflection.GeneratedProtocolMessageType('SigReboot', (_message.Message,), dict(
  DESCRIPTOR = _SIGREBOOT,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.SigReboot)
  ))
_sym_db.RegisterMessage(SigReboot)

Signal = _reflection.GeneratedProtocolMessageType('Signal', (_message.Message,), dict(
  DESCRIPTOR = _SIGNAL,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.Signal)
  ))
_sym_db.RegisterMessage(Signal)

QueuedCmd = _reflection.GeneratedProtocolMessageType('QueuedCmd', (_message.Message,), dict(
  DESCRIPTOR = _QUEUEDCMD,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.QueuedCmd)
  ))
_sym_db.RegisterMessage(QueuedCmd)

MachineState = _reflection.GeneratedProtocolMessageType('MachineState', (_message.Message,), dict(
  DESCRIPTOR = _MACHINESTATE,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.MachineState)
  ))
_sym_db.RegisterMessage(MachineState)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.Job)
  ))
_sym_db.RegisterMessage(Job)

FullState = _reflection.GeneratedProtocolMessageType('FullState', (_message.Message,), dict(
  DESCRIPTOR = _FULLSTATE,
  __module__ = 'controllerd_pb2'
  # @@protoc_insertion_point(class_scope:ezbench_controllerd.FullState)
  ))
_sym_db.RegisterMessage(FullState)


# @@protoc_insertion_point(module_scope)
